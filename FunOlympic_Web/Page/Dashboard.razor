@attribute [AllowAnonymous]
@page "/"
@inject IGamesService gameService;

<Row Margin="Margin.Is2.OnX" >

    <Column ColumnSize="ColumnSize.Is8">
        <Heading Size="HeadingSize.Is4">
            Scores
        </Heading>
    </Column>
    <Column ColumnSize="ColumnSize.Is1.Is3.WithOffset">
       
            <Anchor To="/Scores">Show All</Anchor>>
       
    </Column>
</Row>
<Row Style="background:white" Margin="Margin.Is2.OnX">

    <Column ColumnSize="ColumnSize.Is3.OnWidescreen.Is12.OnMobile" >
        
        <Row>
            <Column ColumnSize="ColumnSize.Is6" Flex="Flex.AlignItems.Stretch" Border="Border.Is1.OnEnd" Height="Height.Is100">
              
                <Field Style="width:100%; ">
                    <FieldLabel>Date</FieldLabel>
                    <DateEdit TValue="DateTime?" Padding="Padding.Is0.FromStart" Date="@selectedDate" DateChanged="@OnDateChanged" />
                </Field>
               
            </Column>
            <Column ColumnSize="ColumnSize.Is6" Flex="Flex.AlignItems.Stretch" Border="Border.Is1.OnEnd">
                <Field Style="width:100%">
                    <FieldLabel>Select Game</FieldLabel>
                   
                    <Select TValue="int" SelectedValue="@gameid" SelectedValueChanged="@changegame">
                        @{
                            <SelectItem Value=0>All</SelectItem>
                            foreach (GameListModel g in gamelist)
                            {
                                <SelectItem Value="@g.Id">@g.GameName</SelectItem>
                            }                        
                        }
                    </Select>
                </Field>
            </Column>
        </Row>
    </Column>
  @foreach(ScoreModel sc in _scores){
    <Column ColumnSize="ColumnSize.Is2.OnDesktop" Flex="Flex.AlignItems.Stretch" Padding="Padding.Is2.OnX"
    Display="Display.None.Block.OnMobile">
    <Card>
        <Field Style="width:100%;" Border="Border.Is1.OnAll" Margin="Margin.Is0.FromBottom">
            <Row>
                        <Column ColumnSize="ColumnSize.Is6.OnDesktop" TextAlignment="TextAlignment.Center">
                        <h4 style="font-weight:900">@sc.GameName</h4>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is6.OnDesktop" TextAlignment="TextAlignment.Center">
                        <h4 >@sc.GameDate.ToShortDateString()</h4>
                    </Column>
             </Row>
                <Row>
                    <Column ColumnSize="ColumnSize.Is5.OnDesktop" TextAlignment="TextAlignment.Center">
                        <h4>@sc.Team1</h4>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is2.OnDesktop" TextAlignment="TextAlignment.Center">
                        <h4>vs</h4>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is5.OnDesktop" TextAlignment="TextAlignment.Center">
                        <h4>@sc.team2</h4>
                    </Column>
                </Row>
                <Row Margin="Margin.Is0.FromBottom">
                    <Column ColumnSize="ColumnSize.Is5.OnDesktop" TextAlignment="TextAlignment.Center">
                        <h4>@sc.team1Score</h4>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is2.OnDesktop" TextAlignment="TextAlignment.Center">
                        
                    </Column>
                    <Column ColumnSize="ColumnSize.Is5.OnDesktop" TextAlignment="TextAlignment.Center">
                        <h4>@sc.team2Score</h4>
                    </Column>
                </Row>
        </Field>
            </Card>
    </Column>
  }
   

</Row>
<Row >
    <Column>
        <Card Margin="Margin.Is2.OnAll">
            
            <CardBody >
               
                <Carousel @bind-SelectedSlide="@selectedSlide" ShowIndicators="@showIndicators" ShowControls="@showControls" >
                    <CarouselSlide Name="1">
                        <Image Source="img/banner.png"  Display="Display.Block" Width="Width.Is100" Style="object-fit: fill; height:500px" />
                    </CarouselSlide>
                    <CarouselSlide Name="2">
                        <Image Source="img/2.jpg" Display="Display.Block" Width="Width.Is100" Style="object-fit: fill; height:500px" />
                    </CarouselSlide>
                  
                </Carousel>
              
            </CardBody>
        </Card>
     </Column>
 </Row>

@*<Carousel Margin="Margin.Is2.OnAll" >
    <CarouselSlide Name="1" Height="Height.Is75">
        <Image Source="img/banner.png" Text="Lights image" Display="Display.Block" Width="Width.Is100" Height="Height.Is75" />
    </CarouselSlide>

    <CarouselSlide Name="2" Height="Height.Is75" Class="carousalheight">
        <Image Source="img/2.jpg" Text="Lights image" Class="carousalheight" Display="Display.Block" Width="Width.Is100" Height="Height.Is75" />
    </CarouselSlide>
</Carousel>*@

 <Heading Size="HeadingSize.Is4">
        Live Games
    </Heading>

<Row   VerticalGutter="16" Margin="Margin.Is2.OnAll">
    @foreach (GameModel sc in _Lives)
    {
        <Column ColumnSize="ColumnSize.Is4.OnTablet.Is3.OnWidescreen.Is12.OnMobile" Flex="Flex.AlignItems.Stretch">
            <Anchor To=@($"stream/{@sc.id}") Class="b-demo-products" TextColor="TextColor.Body">
                <Card>
                    <CardImage Source="@sc.photoloc" Alt="/img/icon.png" Style="object-fit: contain; height:200px;  width:300px" />
                    <CardBody>
                        <CardTitle Size="3">
                           @sc.Team1 vs @sc.team2
                        </CardTitle>
                        <CardText>
                            @sc.team1Score vs @sc.team2Score
                        </CardText>
                        <CardText>
                            @sc.Description
                        </CardText>
                    </CardBody>
                </Card>
            </Anchor>
        </Column>
        
    }
    
    

</Row>
<Heading Size="HeadingSize.Is4" Margin="Margin.Is2.FromTop">
   Gallery
</Heading>
<Row VerticalGutter="16" Margin="Margin.Is2.OnAll">
    @foreach (GameModel sc in _highlihts)
    {
        <Column ColumnSize="ColumnSize.Is4.OnTablet.Is3.OnWidescreen.Is12.OnMobile" Flex="Flex.AlignItems.Stretch">
            <Anchor To=@($"videostream/{@sc.id}") Class="b-demo-products" TextColor="TextColor.Body">
                <Card>
                    <CardImage Source="@sc.photoloc" Alt="/img/icon.png" Style="object-fit: contain; height:200px; width:300px"  />
                    <CardBody>
                        <CardTitle Size="3">
                            @sc.Team1 vs @sc.team2
                        </CardTitle>
                        <CardText>
                            @sc.team1Score vs @sc.team2Score
                        </CardText>
                        <CardText>
                            @sc.Description
                        </CardText>
                    </CardBody>
                </Card>
            </Anchor>
        </Column>

    }
   
</Row>
<style>
   
    .carousalheight {
        height:200px;
        object-fit: contain;

    }
</style>
@code {
    private string selectedSlide = "2";
    private string selectedSlide2 = "2";
    bool showIndicators = true;
    bool showControls = true;

    private int gameid = 0;
    List<GameListModel> gamelist = new List<GameListModel>();
    List<ScoreModel> _scores = new();
    List<GameModel> _Lives = new();
    List<GameModel> _highlihts = new();
    DateTime? selectedDate = DateTime.Now;

    void OnDateChanged(DateTime? date)
    {
        selectedDate = date;
    }
    protected override async Task OnInitializedAsync()
    {
        _scores = await gameService.TopScores(gameid);
        gamelist = await gameService.GameLists();
        _Lives = await gameService.TopLiveGame(0);
        _highlihts = await gameService.TopHIghlights(0);
        await base.OnInitializedAsync();

    }
    async Task changegame(int value)
    {
        gameid = value;
        _scores = await gameService.TopScores(gameid);
    }

}